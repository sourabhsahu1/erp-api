<?php


namespace Modules\Inventory\Repositories;


use Illuminate\Support\Facades\DB;
use Luezoid\Laravelcore\Exceptions\AppException;
use Luezoid\Laravelcore\Repositories\EloquentBaseRepository;
use Modules\Inventory\Models\InvoiceItem;
use Modules\Inventory\Models\Item;
use Modules\Inventory\Models\ItemTax;

class ItemRepository extends EloquentBaseRepository
{
    public $model = Item::class;

    public function create($data)
    {
        $item = parent::create($data);

        if (isset($data['data']['tax_ids'])) {
            foreach ($data['data']['tax_ids'] as $taxId) {
                $taxes = [
                    'tax_id' => $taxId,
                    'item_id' => $item->id
                ];
                $data['data']['taxes'][] = $taxes;
            }
            ItemTax::insert($data['data']['taxes']);
        }

        return $item;
    }


    public function update($data)
    {
        $item = parent::update($data);


        if (isset($data['data']['tax_ids'])) {
            ItemTax::where('item_id', $item->id)->delete();
            foreach ($data['data']['tax_ids'] as $taxId) {
                $taxes = [
                    'tax_id' => $taxId,
                    'item_id' => $item->id
                ];
                $data['data']['taxes'][] = $taxes;
            }
            ItemTax::insert($data['data']['taxes']);
        }
        return $item;
    }


    public function getAll($params = [], $query = null)
    {

        if (isset($params['inputs']['search'])) {
            $query = Item::where('id', 'like', '%' . $params['inputs']['search'] . '%')
                ->orWhere('description', 'like', '%' . $params['inputs']['search'] . '%')
                ->orWhere('unit_price', 'like', '%' . $params['inputs']['search'] . '%');
        }

        return parent::getAll($params, $query); // TODO: Change the autogenerated stub
    }

    public function delete($data)
    {
        $itemData = InvoiceItem::where('item_id', $data['id'])->first();
            ItemTax::where('item_id', $data['id'])->delete();

            if (is_null($itemData)) {
                return parent::delete($data);
            } else {
                throw new AppException('Already in use');
            }


    }
}
